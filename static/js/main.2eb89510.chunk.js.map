{"version":3,"sources":["components/ConvertedValue.jsx","actions/index.js","components/Form.jsx","helpers/index.js","pages/ColorConverterPage.jsx","App.js","reducers/counterReducer.js","reducers/index.js","index.js"],"names":["ConvertedValue","errorMessage","error","bgColor","className","setError","value","type","payload","Form","dispatch","useDispatch","placeholder","onChange","target","len","length","hex","parsedValue","hexRgb","format","join","slice","parseHexValue","err","ColorConverterPage","useSelector","app","bg","console","log","style","backgroundColor","App","initialState","counterReducer","state","combineReducers","store","createStore","reducers","ReactDOM","render","document","getElementById"],"mappings":"qNAQeA,G,MANQ,SAAC,GAAsC,IAApCC,EAAmC,EAAnCA,aAAcC,EAAqB,EAArBA,MAAOC,EAAc,EAAdA,QAC7C,OACE,yBAAKC,UAAU,mBAAmBF,EAAQD,EAAeE,KCOhDE,EAAW,SAACC,GACvB,MAAO,CACLC,KAXqB,YAYrBC,QAASF,I,wBCuBEG,EA9BF,WACX,IAAMC,EAAWC,cAiBjB,OACE,8BACE,2BACEP,UAAU,cACVQ,YAAY,YACZL,KAAK,OACLM,SArBoB,SAAC,GAA2B,IAAfP,EAAc,EAAxBQ,OAAUR,MAC/BS,EAAMT,EAAMU,OAClB,GAPqB,IAOjBD,EACF,IACEL,EAASL,GAAS,IAClB,IAAMY,ECbe,SAACA,GAC5B,IAAMC,EAAcC,IAAOF,EAAK,CAAEG,OAAQ,UAC1C,MAAM,OAAN,OAAcF,EAAYG,KAAK,KAAKC,MAAM,GAAI,GAA9C,KDWkBC,CAAcjB,GAC1BI,EDXC,CACLH,KALwB,eAMxBC,QCSwBS,IACpB,MAAOO,GACPd,EAASL,GAAS,SAEXU,EAfU,GAgBnBL,EAASL,GAAS,SEMToB,EAtBY,WACzB,IAAMtB,EAAUuB,aAAY,qBAAGC,IAAOxB,WAChCD,EAAQwB,aAAY,qBAAGC,IAAOzB,SAC9BD,EAAeyB,aAAY,qBAAGC,IAAO1B,gBACrC2B,EAAK1B,EAAQ,UAAYC,EAI/B,OAFA0B,QAAQC,IAAI5B,GAGV,yBAAKE,UAAU,YAAY2B,MAAO,CAAEC,gBAAgB,GAAD,OAAKJ,KACtD,6BACE,kBAAC,EAAD,CAAMzB,QAASA,EAASD,MAAOA,EAAO0B,GAAIA,IAC1C,kBAAC,EAAD,CACE3B,aAAcA,EACdE,QAASA,EACTD,MAAOA,OCZF+B,MAJf,WACE,OAAO,kBAAC,EAAD,O,cCHHC,EAAe,CACnBhC,OAAO,EACPC,QAAS,GACTF,aAAc,wCAoBDkC,EAjBQ,WAA8C,IAA7CC,EAA4C,uDAApCF,EAAoC,yCAApB3B,EAAoB,EAApBA,KAAMC,EAAc,EAAdA,QACpD,OAAQD,GACN,ILTwB,eKUtB,OAAO,2BACF6B,GADL,IAEEjC,QAASK,IAEb,ILbqB,YKcnB,OAAO,2BACF4B,GADL,IAEElC,MAAOM,IAEX,QACE,OAAO4B,IClBEC,cAAgB,CAC7BV,IAAKQ,ICGDG,EAAQC,YAAYC,GAE1BC,IAASC,OACP,kBAAC,IAAD,CAAUJ,MAAOA,GACf,kBAAC,EAAD,OAEFK,SAASC,eAAe,W","file":"static/js/main.2eb89510.chunk.js","sourcesContent":["import React from \"react\";\n\nconst ConvertedValue = ({ errorMessage, error, bgColor }) => {\n  return (\n    <div className=\"converted-value\">{error ? errorMessage : bgColor}</div>\n  );\n};\n\nexport default ConvertedValue;\n","// ACTIONS AND TYPES\nexport const SET_BG_COLOR = \"SET_BG_COLOR\";\nexport const SET_ERROR = \"SET_ERROR\";\n\nexport const setBgColor = (color) => {\n  return {\n    type: SET_BG_COLOR,\n    payload: color,\n  };\n};\n\nexport const setError = (value) => {\n  return {\n    type: SET_ERROR,\n    payload: value,\n  };\n};\n","import React from \"react\";\nimport { setBgColor, setError } from \"../actions\";\nimport { useDispatch } from \"react-redux\";\nimport { parseHexValue } from \"../helpers\";\n\nconst VALID_HEX_LENGTH = 7;\n\nconst Form = () => {\n  const dispatch = useDispatch();\n\n  const handleColorChange = ({ target: { value } }) => {\n    const len = value.length;\n    if (len === VALID_HEX_LENGTH) {\n      try {\n        dispatch(setError(false));\n        const hex = parseHexValue(value);\n        dispatch(setBgColor(hex));\n      } catch (err) {\n        dispatch(setError(true));\n      }\n    } else if (len > VALID_HEX_LENGTH) {\n      dispatch(setError(true));\n    }\n  };\n\n  return (\n    <form>\n      <input\n        className=\"color-input\"\n        placeholder=\"hex value\"\n        type=\"text\"\n        onChange={handleColorChange}\n      />\n    </form>\n  );\n};\n\nexport default Form;\n","import hexRgb from \"hex-rgb\";\n\nexport const parseHexValue = (hex) => {\n  const parsedValue = hexRgb(hex, { format: \"array\" });\n  return `rgb(${parsedValue.join(\",\").slice(0, -2)})`;\n};\n","import React from \"react\";\nimport ConvertedValue from \"../components/ConvertedValue\";\nimport Form from \"../components/Form\";\nimport { useSelector } from \"react-redux\";\n\nconst ColorConverterPage = () => {\n  const bgColor = useSelector(({ app: { bgColor } }) => bgColor);\n  const error = useSelector(({ app: { error } }) => error);\n  const errorMessage = useSelector(({ app: { errorMessage } }) => errorMessage);\n  const bg = error ? \"#dc3545\" : bgColor;\n\n  console.log(error);\n\n  return (\n    <div className=\"container\" style={{ backgroundColor: `${bg}` }}>\n      <div>\n        <Form bgColor={bgColor} error={error} bg={bg} />\n        <ConvertedValue\n          errorMessage={errorMessage}\n          bgColor={bgColor}\n          error={error}\n        />\n      </div>\n    </div>\n  );\n};\n\nexport default ColorConverterPage;\n","import React from \"react\";\nimport \"./App.css\";\nimport ColorConvertedPage from \"./pages/ColorConverterPage\";\n\nfunction App() {\n  return <ColorConvertedPage />;\n}\n\nexport default App;\n","import { SET_ERROR, SET_BG_COLOR } from \"../actions\";\n\nconst initialState = {\n  error: false,\n  bgColor: \"\",\n  errorMessage: \"Ошибка\",\n};\n\nconst counterReducer = (state = initialState, { type, payload }) => {\n  switch (type) {\n    case SET_BG_COLOR:\n      return {\n        ...state,\n        bgColor: payload,\n      };\n    case SET_ERROR:\n      return {\n        ...state,\n        error: payload,\n      };\n    default:\n      return state;\n  }\n};\n\nexport default counterReducer;\n","import { combineReducers } from \"redux\";\nimport counterReducer from \"./counterReducer\";\n\nexport default combineReducers({\n  app: counterReducer,\n});\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport { createStore } from \"redux\";\nimport { Provider } from \"react-redux\";\nimport reducers from \"./reducers/index\";\n\nconst store = createStore(reducers);\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}